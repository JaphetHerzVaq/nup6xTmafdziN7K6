# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

services:
  server:
    build:
      context: .
    ports:
      - "3000:3000"  # Updated to use port 3000 instead of 5000
    volumes:
      - ./uploads:/app/uploads  
      - ./processed:/app/processed
      - ./static:/app/static
    deploy:
      restart_policy:
        condition: on-failure
    command: gunicorn -b 0.0.0.0:3000 image-ocr-test:app


  # The commented out section below is an example of how to define a PostgreSQL
  # database that your application can use. `depends_on` tells Docker Compose to
  # start the database before your application. The `db-data` volume persists the
  # database data between container restarts. The `db-password` secret is used
  # to set the database password. You must create `db/password.txt` and add
  # a password of your choosing to it before running `docker compose up`.
  # db:
  #   image: postgres
  #   restart: always
  #   user: postgres
  #   secrets:
  #     - db-password
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=example
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
  #   expose:
  #     - 5432
  #   healthcheck:
  #     test: [ "CMD", "pg_isready" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

# volumes:
#   db-data:

# secrets:
#   db-password:
#     file: db/password.txt